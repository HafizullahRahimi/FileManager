@page "/ProfileImages/Download/{Id:guid}/{Url}"

@using FileManager.Application.ProfileImageServices
@using Microsoft.AspNetCore.Authorization
@using Microsoft.JSInterop

@inject IProfileImageService ProfileImageService
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@attribute [Authorize]

<PageTitle>Download</PageTitle>

@code {
    [Parameter]
    public Guid Id { get; set; }

    [Parameter]
    public string Url { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var fileData = await ProfileImageService.DownloadAsync(Id, CancellationToken.None);

            if (fileData == null)
            {
                // Handle case where file data is not found
                Console.WriteLine("File not found.");
                return;
            }

            await JS.InvokeVoidAsync("downloadFileFromStream", fileData.Content, fileData.FileName);
                // Navigate back to the previous page or a specific route after download
                NavigationManager.NavigateTo(Url ?? "/");
        }
        catch (Exception ex)
        {
            // Handle error appropriately
            Console.WriteLine($"Error downloading file: {ex.Message}");
        }
    }
}